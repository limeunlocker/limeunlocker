name: Build Kivy Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 90

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git zip unzip python3-pip build-essential libffi-dev libssl-dev \
          zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm \
          libncurses5-dev libncursesw5-dev xz-utils tk-dev liblzma-dev python3-openssl \
          autoconf libtool pkg-config cmake ninja-build ccache ant gradle

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip wheel setuptools
        pip install buildozer==1.5.0 cython==0.29.33
        pip install colorama appdirs sh jinja2 six

    - name: Setup Android SDK
      env:
        ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      run: |
        mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
        cd $ANDROID_SDK_ROOT/cmdline-tools
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        unzip -q commandlinetools-linux-9477386_latest.zip
        mkdir -p latest
        mv cmdline-tools/* latest/ || true
        rm -rf cmdline-tools

        export PATH=$PATH:$ANDROID_SDK_ROOT/cmdline-tools/latest/bin

        yes | sdkmanager --sdk_root=$ANDROID_SDK_ROOT --licenses

        sdkmanager --sdk_root=$ANDROID_SDK_ROOT "platform-tools" "platforms;android-31" "build-tools;30.0.3"

        echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
        echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
        echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH
        echo "$ANDROID_SDK_ROOT/build-tools/30.0.3" >> $GITHUB_PATH

    - name: Verify AIDL and Build Tools
      env:
        ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      run: |
        echo "Listing build-tools 30.0.3 contents:"
        ls $ANDROID_SDK_ROOT/build-tools/30.0.3/
        if command -v aidl >/dev/null 2>&1; then
          echo "AIDL found!"
        else
          echo "ERROR: AIDL not found in PATH."
          exit 1
        fi

    - name: Build APK
      env:
        ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      run: |
        export PATH=$PATH:$ANDROID_SDK_ROOT/build-tools/30.0.3
        buildozer android debug --verbose

    - name: Upload APK
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: lime-offline-unlocker-debug
        path: bin/*.apk
        retention-days: 30

    - name: Upload logs on failure
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: build-logs-failure
        path: .buildozer/
        retention-days: 7
