name: Build Kivy Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          git zip unzip python3-pip \
          build-essential libffi-dev libssl-dev \
          zlib1g-dev libbz2-dev libreadline-dev \
          libsqlite3-dev wget curl llvm \
          libncurses5-dev libncursesw5-dev \
          xz-utils tk-dev libffi-dev liblzma-dev \
          python3-openssl git autoconf libtool \
          pkg-config

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install buildozer cython==0.29.33
        pip install --upgrade requests urllib3 certifi

    - name: Cache Android SDK and NDK
      uses: actions/cache@v3
      with:
        path: |
          ~/.buildozer
        key: buildozer-${{ runner.os }}-${{ hashFiles('buildozer.spec') }}
        restore-keys: |
          buildozer-${{ runner.os }}-

    - name: Set up Android SDK and NDK
      run: |
        # Create buildozer directory structure
        mkdir -p ~/.buildozer/android/platform
        
        # Set environment variables
        export ANDROID_HOME=$HOME/.buildozer/android/platform
        export ANDROID_SDK_ROOT=$ANDROID_HOME
        export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin
        export PATH=$PATH:$ANDROID_HOME/platform-tools
        export PATH=$PATH:$ANDROID_HOME/build-tools/31.0.0
        
        # Download Android Command Line Tools
        cd ~/.buildozer/android/platform
        if [ ! -f "commandlinetools-linux-9477386_latest.zip" ]; then
          wget -q --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 -t 3 \
            https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        fi
        
        # Extract and setup command line tools
        if [ ! -d "cmdline-tools/latest" ]; then
          unzip -q commandlinetools-linux-9477386_latest.zip
          mkdir -p cmdline-tools/latest
          mv cmdline-tools/* cmdline-tools/latest/ 2>/dev/null || true
          rmdir cmdline-tools 2>/dev/null || true
        fi
        
        # Accept licenses and install SDK components
        export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin
        yes | sdkmanager --licenses || true
        sdkmanager --update
        sdkmanager \
          "platform-tools" \
          "platforms;android-31" \
          "build-tools;31.0.0" \
          "ndk;23.1.7779620"

    - name: Initialize buildozer
      run: |
        export ANDROID_HOME=$HOME/.buildozer/android/platform
        export ANDROID_SDK_ROOT=$ANDROID_HOME
        export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin
        export PATH=$PATH:$ANDROID_HOME/platform-tools
        export PATH=$PATH:$ANDROID_HOME/build-tools/31.0.0
        
        # Initialize buildozer (this will download additional dependencies)
        buildozer android debug --verbose || true

    - name: Build APK
      run: |
        export ANDROID_HOME=$HOME/.buildozer/android/platform
        export ANDROID_SDK_ROOT=$ANDROID_HOME
        export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin
        export PATH=$PATH:$ANDROID_HOME/platform-tools
        export PATH=$PATH:$ANDROID_HOME/build-tools/31.0.0
        
        # Set additional environment variables for build
        export PYTHONUNBUFFERED=1
        export BUILDOZER_LOG_LEVEL=2
        
        # Build the APK
        buildozer android debug --verbose

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: lime-offline-unlocker-apk
        path: bin/*.apk
        retention-days: 30

    - name: Upload build logs on failure
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: build-logs
        path: |
          .buildozer/android/logs/
          .buildozer/android/platform/build/
        retention-days: 7
